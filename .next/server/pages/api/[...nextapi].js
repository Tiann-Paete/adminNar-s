"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/[...nextapi]";
exports.ids = ["pages/api/[...nextapi]"];
exports.modules = {

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...nextapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...nextapi%5D.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...nextapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...nextapi%5D.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_nextapi_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src\\pages\\api\\[...nextapi].js */ \"(api)/./src/pages/api/[...nextapi].js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_nextapi_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_nextapi_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/[...nextapi]\",\n        pathname: \"/api/[...nextapi]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_nextapi_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRiU1Qi4uLm5leHRhcGklNUQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZzcmMlNUNwYWdlcyU1Q2FwaSU1QyU1Qi4uLm5leHRhcGklNUQuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDK0Q7QUFDL0Q7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHNEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyxzREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZG1pbnBhbmVsLz82YWUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmNcXFxccGFnZXNcXFxcYXBpXFxcXFsuLi5uZXh0YXBpXS5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL1suLi5uZXh0YXBpXVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL1suLi5uZXh0YXBpXVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...nextapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...nextapi%5D.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/[...nextapi].js":
/*!***************************************!*\
  !*** ./src/pages/api/[...nextapi].js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler),\n/* harmony export */   handleUpdateAdminData: () => (/* binding */ handleUpdateAdminData)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! url */ \"url\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(url__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/db */ \"(api)/./src/utils/db.js\");\n\n\n\n\nconst db = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool({\n    host: process.env.MYSQL_HOST,\n    port: process.env.MYSQL_PORT,\n    user: process.env.MYSQL_USER,\n    password: process.env.MYSQL_PASSWORD,\n    database: process.env.MYSQL_DATABASE,\n    waitForConnections: true,\n    connectionLimit: 10,\n    queueLimit: 0\n});\nasync function handler(req, res) {\n    const { method } = req;\n    const { pathname, query } = (0,url__WEBPACK_IMPORTED_MODULE_1__.parse)(req.url, true);\n    console.log(\"Received request:\", method, pathname, query);\n    if (pathname === \"/api/test\") {\n        res.status(200).json({\n            message: \"Test route working\"\n        });\n        return;\n    }\n    if (pathname === \"/api/admin-name\") {\n        try {\n            const [results] = await db.query(\"SELECT full_name FROM admin LIMIT 1\");\n            if (results.length > 0) {\n                res.status(200).json({\n                    fullName: results[0].full_name\n                });\n            } else {\n                res.status(404).json({\n                    error: \"Admin not found\"\n                });\n            }\n        } catch (error) {\n            console.error(\"Error fetching admin name:\", error);\n            res.status(500).json({\n                error: \"An error occurred while fetching admin name\"\n            });\n        }\n        return;\n    }\n    try {\n        switch(method){\n            case \"GET\":\n                if (pathname === \"/api/check-auth\") {\n                    const authHeader = req.headers.authorization;\n                    if (!authHeader) {\n                        return res.status(200).json({\n                            isAuthenticated: false,\n                            usernamePasswordVerified: false\n                        });\n                    }\n                    const token = authHeader.split(\" \")[1];\n                    try {\n                        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n                        const now = Math.floor(Date.now() / 1000);\n                        if (decoded.exp && decoded.exp > now) {\n                            // Token is still valid\n                            return res.status(200).json({\n                                isAuthenticated: true,\n                                usernamePasswordVerified: true,\n                                expiresIn: decoded.exp - now\n                            });\n                        } else {\n                            // Token has expired\n                            return res.status(200).json({\n                                isAuthenticated: false,\n                                usernamePasswordVerified: false\n                            });\n                        }\n                    } catch (error) {\n                        return res.status(200).json({\n                            isAuthenticated: false,\n                            usernamePasswordVerified: false\n                        });\n                    }\n                } else if (pathname === \"/api/products\") {\n                    await handleGetProducts(req, res);\n                } else if (pathname === \"/api/total-stock\") {\n                    await handleGetTotalStock(req, res);\n                } else if (pathname === \"/api/sales-report\") {\n                    await handleGetSalesReport(req, res);\n                } else if (pathname === \"/api/sales-data\") {\n                    await handleGetSalesData(req, res);\n                } else if (pathname === \"/api/total-products\") {\n                    await handleGetTotalProducts(req, res);\n                } else if (pathname === \"/api/top-products\") {\n                    await handleGetTopProducts(req, res);\n                } else if (pathname === \"/api/rated-products-count\") {\n                    await handleGetRatedProductsCount(req, res);\n                } else if (pathname === \"/api/logout\") {\n                    handleLogout(req, res);\n                } else if (pathname === \"/api/orders\") {\n                    await handleGetOrders(req, res);\n                } else if (pathname === \"/api/admin-data\") {\n                    await handleGetAdminData(req, res);\n                }\n                break;\n            case \"POST\":\n                if (pathname === \"/api/signin\") {\n                    await handleSignIn(req, res);\n                } else if (pathname === \"/api/validate-pin\") {\n                    await handleValidatePin(req, res);\n                } else if (pathname === \"/api/products\") {\n                    await handleAddProduct(req, res);\n                }\n                break;\n            case \"PUT\":\n                if (pathname.startsWith(\"/api/products/\")) {\n                    const id = pathname.split(\"/\").pop();\n                    await handleUpdateProduct(req, res, id);\n                } else if (pathname.startsWith(\"/api/orders/\")) {\n                    const parts = pathname.split(\"/\");\n                    const id = parts[3]; // This is the order ID\n                    if (parts[4] === \"status\") {\n                        await handleUpdateOrderStatus(req, res, id);\n                    } else if (parts[4] === \"cancel\") {\n                        await handleCancelOrder(req, res, id);\n                    } else {\n                        await handleUpdateOrder(req, res, id);\n                    }\n                }\n                if (pathname === \"/api/update-admin\") {\n                    await handleUpdateAdminData(req, res);\n                }\n                break;\n            case \"DELETE\":\n                if (pathname.startsWith(\"/api/products/\")) {\n                    const id = pathname.split(\"/\").pop();\n                    await handleDeleteProduct(req, res, id);\n                } else if (pathname.startsWith(\"/api/orders/\") && pathname.endsWith(\"/salesreport\")) {\n                    await handleRemoveOrderFromSalesReport(req, res);\n                } else {\n                    res.status(404).json({\n                        error: \"Route not found\"\n                    });\n                }\n                break;\n            default:\n                res.setHeader(\"Allow\", [\n                    \"GET\",\n                    \"POST\",\n                    \"PUT\",\n                    \"DELETE\"\n                ]);\n                res.status(405).end(`Method ${method} Not Allowed`);\n        }\n        res.status(404).json({\n            error: \"Route not found\"\n        });\n    } catch (error) {\n        console.error(\"Error in API route:\", error);\n        res.status(500).json({\n            error: \"An error occurred while processing your request\"\n        });\n    }\n}\nasync function handleSignIn(req, res) {\n    const { username, password } = req.body;\n    console.log(\"Signin attempt:\", {\n        username\n    }); // Don't log passwords\n    try {\n        const [results] = await db.query(\"SELECT * FROM admin WHERE username = ?\", [\n            username\n        ]);\n        console.log(\"Database query results:\", results);\n        if (results.length === 0) {\n            console.log(\"User not found\");\n            return res.status(401).json({\n                error: \"Invalid username or password\"\n            });\n        }\n        const user = results[0];\n        // For now, directly compare passwords\n        const passwordMatch = password === user.password;\n        if (!passwordMatch) {\n            console.log(\"Password mismatch\");\n            return res.status(401).json({\n                error: \"Invalid username or password\"\n            });\n        }\n        const token = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.sign)({\n            userId: user.id\n        }, process.env.JWT_SECRET, {\n            expiresIn: \"6h\"\n        });\n        console.log(\"Login successful, token generated\");\n        res.status(200).json({\n            success: true,\n            message: \"Signin successful\",\n            username: user.username,\n            token: token\n        });\n    } catch (error) {\n        console.error(\"Sign in error:\", error);\n        res.status(500).json({\n            error: \"An error occurred during signin\"\n        });\n    }\n}\nasync function handleValidatePin(req, res) {\n    const { pin } = req.body;\n    const token = req.headers.authorization?.split(\" \")[1];\n    if (!token) {\n        return res.status(401).json({\n            error: \"No token provided\"\n        });\n    }\n    try {\n        const decoded = (0,jsonwebtoken__WEBPACK_IMPORTED_MODULE_2__.verify)(token, process.env.JWT_SECRET);\n        const [results] = await db.query(\"SELECT pin FROM admin WHERE id = ?\", [\n            decoded.userId\n        ]);\n        if (results.length === 0) {\n            return res.status(404).json({\n                error: \"Admin not found\"\n            });\n        }\n        const storedPin = results[0].pin;\n        if (String(pin) === String(storedPin)) {\n            res.status(200).json({\n                message: \"PIN validated successfully\"\n            });\n        } else {\n            res.status(401).json({\n                error: \"Invalid PIN\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error validating PIN:\", error);\n        res.status(500).json({\n            error: \"An error occurred while validating PIN\"\n        });\n    }\n}\nasync function handleLogout(req, res) {\n    const token = req.headers.authorization?.split(\" \")[1];\n    if (token) {\n        try {\n            // Invalidate the token in the database or wherever you're storing active sessions\n            await db.query(\"UPDATE sessions SET is_active = FALSE WHERE token = ?\", [\n                token\n            ]);\n        } catch (error) {\n            console.error(\"Error invalidating token:\", error);\n        }\n    }\n    res.setHeader(\"Set-Cookie\", \"token=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly\");\n    res.status(200).json({\n        success: true,\n        message: \"Logout successful\"\n    });\n}\nasync function handleGetAdminData(req, res) {\n    try {\n        const [results] = await db.query(\"SELECT full_name, username, password, pin, role FROM admin LIMIT 1\");\n        if (results.length > 0) {\n            const adminData = results[0];\n            // Mask the password and PIN\n            adminData.password = \"*\".repeat(adminData.password.length);\n            adminData.pin = \"*\".repeat(adminData.pin.length);\n            res.status(200).json(adminData);\n        } else {\n            res.status(404).json({\n                error: \"Admin not found\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error fetching admin data:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching admin data\"\n        });\n    }\n}\n// Update this function to hash the PIN before storing\nasync function handleUpdateAdminData(req, res) {\n    const { full_name, username, password, pin, role } = req.body;\n    try {\n        let sql = \"UPDATE admin SET full_name = ?, username = ?, role = ?\";\n        let params = [\n            full_name,\n            username,\n            role\n        ];\n        if (password) {\n            sql += \", password = ?\";\n            params.push(password);\n        }\n        if (pin) {\n            sql += \", pin = ?\";\n            params.push(pin);\n        }\n        sql += \" WHERE id = 1\"; // Assuming there's only one admin record\n        const result = await (0,_utils_db__WEBPACK_IMPORTED_MODULE_3__.query)(sql, params);\n        if (result.affectedRows === 0) {\n            res.status(404).json({\n                error: \"Admin not found\"\n            });\n        } else {\n            res.status(200).json({\n                message: \"Admin data updated successfully\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error updating admin data:\", error);\n        res.status(500).json({\n            error: \"An error occurred while updating admin data\"\n        });\n    }\n}\nasync function handleGetSalesData(req, res) {\n    const { timeFrame } = req.query;\n    let dateCondition, statusCondition;\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    switch(timeFrame){\n        case \"today\":\n            dateCondition = \"DATE(order_date) = CURDATE()\";\n            break;\n        case \"yesterday\":\n            dateCondition = \"DATE(order_date) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)\";\n            break;\n        case \"lastWeek\":\n            const lastWeekStart = new Date(today);\n            lastWeekStart.setDate(lastWeekStart.getDate() - 7);\n            const lastWeekEnd = new Date(today);\n            lastWeekEnd.setDate(lastWeekEnd.getDate() - 1);\n            dateCondition = `DATE(order_date) BETWEEN '${lastWeekStart.toISOString().split(\"T\")[0]}' AND '${lastWeekEnd.toISOString().split(\"T\")[0]}'`;\n            break;\n        case \"lastMonth\":\n            const lastMonthStart = new Date(today);\n            lastMonthStart.setMonth(lastMonthStart.getMonth() - 1);\n            const lastMonthEnd = new Date(today);\n            lastMonthEnd.setDate(lastMonthEnd.getDate() - 1);\n            dateCondition = `DATE(order_date) BETWEEN '${lastMonthStart.toISOString().split(\"T\")[0]}' AND '${lastMonthEnd.toISOString().split(\"T\")[0]}'`;\n            break;\n        default:\n            dateCondition = \"DATE(order_date) = CURDATE()\";\n    }\n    try {\n        // Total Sales (always only \"Delivered\" status)\n        const [salesResult] = await db.query(`\r\n      SELECT COALESCE(SUM(total), 0) as periodSales\r\n      FROM orders\r\n      WHERE ${dateCondition} AND status = 'Delivered'\r\n    `);\n        // Total Orders\n        let ordersStatusCondition = \"status = 'Delivered'\";\n        if (timeFrame === \"lastWeek\" || timeFrame === \"lastMonth\") {\n            ordersStatusCondition = \"status IN ('Order Placed', 'Processed', 'Shipped', 'Delivered', 'Cancelled')\";\n        }\n        const [ordersResult] = await db.query(`\r\n      SELECT COUNT(*) as totalOrders\r\n      FROM orders\r\n      WHERE ${dateCondition} AND ${ordersStatusCondition}\r\n    `);\n        // Total Customers (always all statuses)\n        const [customersResult] = await db.query(`\r\n      SELECT COUNT(DISTINCT user_id) as totalCustomers\r\n      FROM orders\r\n      WHERE ${dateCondition}\r\n    `);\n        const result = {\n            periodSales: Number(salesResult[0].periodSales),\n            totalOrders: ordersResult[0].totalOrders,\n            totalCustomers: customersResult[0].totalCustomers\n        };\n        res.status(200).json(result);\n    } catch (error) {\n        console.error(\"Error fetching sales data:\", error);\n        res.status(500).json({\n            error: \"Error fetching sales data\"\n        });\n    }\n}\nasync function handleGetTotalProducts(req, res) {\n    const [result] = await db.query(\"SELECT COUNT(*) as totalProducts FROM products\");\n    res.status(200).json(result[0]);\n}\nasync function handleGetTopProducts(req, res) {\n    const [result] = await db.query(`\r\n    SELECT \r\n      p.id,\r\n      p.name,\r\n      p.image_url,\r\n      p.rating,\r\n      COALESCE(SUM(op.quantity), 0) as sold\r\n    FROM products p\r\n    LEFT JOIN ordered_products op ON p.id = op.product_id\r\n    GROUP BY p.id\r\n    ORDER BY sold DESC, p.rating DESC\r\n    LIMIT 5\r\n  `);\n    res.status(200).json(result);\n}\nasync function handleGetRatedProductsCount(req, res) {\n    const { timeFrame } = req.query;\n    let dateCondition;\n    switch(timeFrame){\n        case \"today\":\n            dateCondition = \"DATE(created_at) = CURDATE()\";\n            break;\n        case \"yesterday\":\n            dateCondition = \"DATE(created_at) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)\";\n            break;\n        case \"lastWeek\":\n            dateCondition = \"DATE(created_at) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE()\";\n            break;\n        case \"lastMonth\":\n            dateCondition = \"DATE(created_at) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE()\";\n            break;\n        default:\n            dateCondition = \"DATE(created_at) = CURDATE()\";\n    }\n    const [result] = await db.query(`\r\n    SELECT COUNT(DISTINCT product_id) as ratedProductsCount\r\n    FROM product_ratings\r\n    WHERE ${dateCondition}\r\n  `);\n    res.status(200).json(result[0]);\n}\nasync function handleGetProducts(req, res) {\n    const { page = 1, limit = 10 } = req.query;\n    const offset = (page - 1) * limit;\n    try {\n        const [countResult] = await db.query(\"SELECT COUNT(*) as total FROM products WHERE deleted = FALSE\");\n        const totalItems = countResult[0].total;\n        const totalPages = Math.ceil(totalItems / limit);\n        const [products] = await db.query(\"SELECT * FROM products WHERE deleted = FALSE LIMIT ? OFFSET ?\", [\n            parseInt(limit),\n            offset\n        ]);\n        res.status(200).json({\n            products,\n            currentPage: parseInt(page),\n            totalPages,\n            totalItems\n        });\n    } catch (error) {\n        console.error(\"Error fetching products:\", error);\n        res.status(500).json({\n            error: \"Error fetching products\"\n        });\n    }\n}\nasync function handleGetTotalStock(req, res) {\n    try {\n        const [result] = await db.query(\"SELECT SUM(stock_quantity) as totalStock FROM products\");\n        res.status(200).json({\n            totalStock: result[0].totalStock\n        });\n    } catch (error) {\n        console.error(\"Error fetching total stock:\", error);\n        res.status(500).json({\n            error: \"Error fetching total stock\"\n        });\n    }\n}\nasync function handleAddProduct(req, res) {\n    const { name, description, price, image_url, stock_quantity, category, supplier_id, rating } = req.body;\n    const order_id = generateOrderId();\n    const sql = \"INSERT INTO products (name, description, price, image_url, stock_quantity, category, supplier_id, order_id, rating) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n    try {\n        const [result] = await db.query(sql, [\n            name,\n            description,\n            price,\n            image_url,\n            stock_quantity,\n            category,\n            supplier_id,\n            order_id,\n            rating\n        ]);\n        res.status(201).json({\n            message: \"Product added successfully\",\n            id: result.insertId,\n            order_id: order_id\n        });\n    } catch (error) {\n        console.error(\"Error adding product:\", error);\n        res.status(500).json({\n            error: \"Error adding product\"\n        });\n    }\n}\nfunction generateOrderId() {\n    return \"ORD-\" + Math.random().toString(36).substr(2, 9).toUpperCase();\n}\nasync function handleUpdateProduct(req, res, id) {\n    const { name, description, price, image_url, stock_quantity, category, supplier_id, rating } = req.body;\n    const sql = \"UPDATE products SET name=?, description=?, price=?, image_url=?, stock_quantity=?, category=?, supplier_id=?, rating=? WHERE id=?\";\n    try {\n        const [result] = await db.query(sql, [\n            name,\n            description,\n            price,\n            image_url,\n            stock_quantity,\n            category,\n            supplier_id,\n            rating,\n            id\n        ]);\n        if (result.affectedRows === 0) {\n            res.status(404).json({\n                error: \"Product not found\"\n            });\n        } else {\n            res.status(200).json({\n                message: \"Product updated successfully\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error updating product:\", error);\n        res.status(500).json({\n            error: \"Error updating product\"\n        });\n    }\n}\nasync function handleDeleteProduct(req, res, id) {\n    const sql = \"UPDATE products SET deleted = TRUE WHERE id = ?\";\n    try {\n        const [result] = await db.query(sql, [\n            id\n        ]);\n        if (result.affectedRows === 0) {\n            res.status(404).json({\n                error: \"Product not found\"\n            });\n        } else {\n            res.status(200).json({\n                message: \"Product marked as deleted successfully\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error marking product as deleted:\", error);\n        res.status(500).json({\n            error: \"Error marking product as deleted\"\n        });\n    }\n}\nasync function handleGetSalesReport(req, res) {\n    try {\n        const [result] = await db.query(\"SELECT * FROM user_login\");\n        res.status(200).json(result);\n    } catch (error) {\n        console.error(\"Error fetching sales report:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching sales report data\"\n        });\n    }\n}\nasync function handleUpdateOrderStatus(req, res, id) {\n    const { status } = req.body;\n    console.log(\"Updating order status:\", id, status);\n    const sql = \"UPDATE orders SET status = ? WHERE id = ?\";\n    try {\n        const [result] = await db.query(sql, [\n            status,\n            id\n        ]);\n        if (result.affectedRows === 0) {\n            res.status(404).json({\n                error: \"Order not found\"\n            });\n        } else {\n            res.status(200).json({\n                message: \"Order status updated successfully\",\n                status: status\n            });\n        }\n    } catch (error) {\n        console.error(\"Error updating order status:\", error);\n        res.status(500).json({\n            error: \"Error updating order status\"\n        });\n    }\n}\nasync function handleCancelOrder(req, res, id) {\n    const sql = \"UPDATE orders SET status = 'Cancelled' WHERE id = ?\";\n    try {\n        const [result] = await db.query(sql, [\n            id\n        ]);\n        if (result.affectedRows === 0) {\n            res.status(404).json({\n                error: \"Order not found\"\n            });\n        } else {\n            res.status(200).json({\n                message: \"Order cancelled successfully\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error cancelling order:\", error);\n        res.status(500).json({\n            error: \"Error cancelling order\"\n        });\n    }\n}\nasync function handleUpdateOrder(req, res, id) {\n    const { order_date } = req.body;\n    const sql = \"UPDATE orders SET order_date = ? WHERE id = ?\";\n    try {\n        const [result] = await db.query(sql, [\n            order_date,\n            id\n        ]);\n        if (result.affectedRows === 0) {\n            res.status(404).json({\n                error: \"Order not found\"\n            });\n        } else {\n            res.status(200).json({\n                message: \"Order date updated successfully\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error updating order date:\", error);\n        res.status(500).json({\n            error: \"Error updating order date\"\n        });\n    }\n}\nasync function handleRemoveOrderFromSalesReport(req, res) {\n    const { id } = req.query;\n    const sql = \"UPDATE orders SET in_sales_report = 0 WHERE id = ?\";\n    try {\n        const [result] = await db.query(sql, [\n            id\n        ]);\n        if (result.affectedRows === 0) {\n            res.status(404).json({\n                error: \"Order not found\"\n            });\n        } else {\n            res.status(200).json({\n                message: \"Order removed from sales report successfully\"\n            });\n        }\n    } catch (error) {\n        console.error(\"Error removing order from sales report:\", error);\n        res.status(500).json({\n            error: \"Error removing order from sales report\"\n        });\n    }\n}\nasync function handleGetOrders(req, res) {\n    try {\n        const [result] = await db.query(`\r\n      SELECT o.*, \r\n             GROUP_CONCAT(CONCAT(op.name, ' (', op.quantity, ')') SEPARATOR ', ') AS ordered_products\r\n      FROM orders o\r\n      LEFT JOIN ordered_products op ON o.id = op.order_id\r\n      WHERE o.in_sales_report = 1\r\n      GROUP BY o.id\r\n    `);\n        res.status(200).json(result);\n    } catch (error) {\n        console.error(\"Error fetching orders:\", error);\n        res.status(500).json({\n            error: \"An error occurred while fetching orders\"\n        });\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/[...nextapi].js\n");

/***/ }),

/***/ "(api)/./src/utils/db.js":
/*!*************************!*\
  !*** ./src/utils/db.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   query: () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool({\n    host: process.env.MYSQL_HOST,\n    port: parseInt(process.env.MYSQL_PORT),\n    database: process.env.MYSQL_DATABASE,\n    user: process.env.MYSQL_USER,\n    password: process.env.MYSQL_PASSWORD,\n    connectionLimit: 10,\n    waitForConnections: true,\n    queueLimit: 0\n});\nasync function query(sql, values) {\n    try {\n        const [results] = await pool.query(sql, values);\n        return results;\n    } catch (error) {\n        console.error(\"Database query error:\", error);\n        throw error;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pool);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvZGIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtQztBQUVuQyxNQUFNQyxPQUFPRCxnRUFBZ0IsQ0FBQztJQUM1QkcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxVQUFVO0lBQzVCQyxNQUFNQyxTQUFTSixRQUFRQyxHQUFHLENBQUNJLFVBQVU7SUFDckNDLFVBQVVOLFFBQVFDLEdBQUcsQ0FBQ00sY0FBYztJQUNwQ0MsTUFBTVIsUUFBUUMsR0FBRyxDQUFDUSxVQUFVO0lBQzVCQyxVQUFVVixRQUFRQyxHQUFHLENBQUNVLGNBQWM7SUFDcENDLGlCQUFpQjtJQUNqQkMsb0JBQW9CO0lBQ3BCQyxZQUFZO0FBQ2Q7QUFFTyxlQUFlQyxNQUFNQyxHQUFHLEVBQUVDLE1BQU07SUFDckMsSUFBSTtRQUNGLE1BQU0sQ0FBQ0MsUUFBUSxHQUFHLE1BQU1yQixLQUFLa0IsS0FBSyxDQUFDQyxLQUFLQztRQUN4QyxPQUFPQztJQUNULEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxNQUFNQTtJQUNSO0FBQ0Y7QUFFQSxpRUFBZXRCLElBQUlBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hZG1pbnBhbmVsLy4vc3JjL3V0aWxzL2RiLmpzP2QzODQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcclxuXHJcbmNvbnN0IHBvb2wgPSBteXNxbC5jcmVhdGVQb29sKHtcclxuICBob3N0OiBwcm9jZXNzLmVudi5NWVNRTF9IT1NULFxyXG4gIHBvcnQ6IHBhcnNlSW50KHByb2Nlc3MuZW52Lk1ZU1FMX1BPUlQpLFxyXG4gIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5NWVNRTF9EQVRBQkFTRSxcclxuICB1c2VyOiBwcm9jZXNzLmVudi5NWVNRTF9VU0VSLFxyXG4gIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5NWVNRTF9QQVNTV09SRCxcclxuICBjb25uZWN0aW9uTGltaXQ6IDEwLFxyXG4gIHdhaXRGb3JDb25uZWN0aW9uczogdHJ1ZSxcclxuICBxdWV1ZUxpbWl0OiAwXHJcbn0pO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHF1ZXJ5KHNxbCwgdmFsdWVzKSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IFtyZXN1bHRzXSA9IGF3YWl0IHBvb2wucXVlcnkoc3FsLCB2YWx1ZXMpO1xyXG4gICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0RhdGFiYXNlIHF1ZXJ5IGVycm9yOicsIGVycm9yKTtcclxuICAgIHRocm93IGVycm9yO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcG9vbDsiXSwibmFtZXMiOlsibXlzcWwiLCJwb29sIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiTVlTUUxfSE9TVCIsInBvcnQiLCJwYXJzZUludCIsIk1ZU1FMX1BPUlQiLCJkYXRhYmFzZSIsIk1ZU1FMX0RBVEFCQVNFIiwidXNlciIsIk1ZU1FMX1VTRVIiLCJwYXNzd29yZCIsIk1ZU1FMX1BBU1NXT1JEIiwiY29ubmVjdGlvbkxpbWl0Iiwid2FpdEZvckNvbm5lY3Rpb25zIiwicXVldWVMaW1pdCIsInF1ZXJ5Iiwic3FsIiwidmFsdWVzIiwicmVzdWx0cyIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils/db.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2F%5B...nextapi%5D&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5C%5B...nextapi%5D.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();